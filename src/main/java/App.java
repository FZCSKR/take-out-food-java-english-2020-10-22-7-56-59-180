import com.sun.scenario.effect.impl.sw.sse.SSEBlend_SRC_OUTPeer;

import java.lang.String;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static com.sun.org.apache.xerces.internal.util.PropertyState.is;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App{
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        List<Item> itemRepositoryAll = itemRepository.findAll();
        List<SalesPromotion> salesPromotionRepositoryAll = salesPromotionRepository.findAll();
        double sum1=0;
        double sum2=0;
        boolean isCheap = false;//false代表价格未达到30且没有半价商品
        //存储价格减少的价格
        double moneyfirst =0;
        double moneySecond =0;

        //1.计算第一种方式价格 到达30则减6
        //存储打折的商品
        ArrayList<String> listShop = new ArrayList<>();
        for (int i = 0; i < inputs.size(); i++) {
            String[] split = inputs.get(i).split(" ");
            for (int j = 0; j < itemRepositoryAll.size(); j++) {
                if(split[0].equals(itemRepositoryAll.get(j).getId())){
                    sum1 = sum1 + itemRepositoryAll.get(j).getPrice() * Integer.parseInt(split[2]);

                }
            }

        }
        if(sum1 >= 30){
            isCheap=true;
            sum1=sum1-6.0;
        }

        //计算第二种价格方式：个别菜品半价
        //获取打折商品
        List<String> relatedItems = salesPromotionRepositoryAll.get(1).getRelatedItems();

        for (int i = 0; i < inputs.size(); i++) {
            String[] split1 = inputs.get(i).split(" ");

            boolean flag=false;//标记是否已计算价格
            for (int j = 0; j < relatedItems.size(); j++) {
                //是打折的商品，则获取原来价格并乘以个数，最后乘以0.5
                if( split1[0].equals(relatedItems.get(j)) ){
                    //把打折商品名称存储起来，用来后面打印
                    listShop.add(itemRepository.getNamebyId(split1[0]));
                    //计算价格
                    sum2 = sum2 + itemRepository.getPricebyId(split1[0]) * Integer.parseInt(split1[2]) * 0.5;

                    flag = true;
                    isCheap=true;
                    //计算节省的价格
                    moneySecond =moneySecond + itemRepository.getPricebyId(split1[0]) * Integer.parseInt(split1[2])*0.5;
                    break;
                }
            }
            if(!flag){
                sum2 = sum2 + itemRepository.getPricebyId(split1[0]) * Integer.parseInt(split1[2]);
                flag =false;
            }

        }

        double sum = sum1>sum2?sum2:sum1;


            System.out.println("============= Order details =============");
            for (int i = 0; i < inputs.size(); i++) {
                String[] split = inputs.get(i).split(" ");
                double value = itemRepository.getPricebyId(split[0]) * Integer.parseInt(split[2]);
                System.out.println(itemRepository.getNamebyId(split[0])+" "+split[1]+" "+split[2] + " =" +" "+value +" yuan");

            }
        System.out.println("-----------------------------------\n");
            if(isCheap){
                if( sum1>sum2 ){
                    System.out.println("Promotion used:");
                    System.out.print("Half price for certain dishes (");
                    for (int i = 0; i < listShop.size(); i++) {
                        System.out.print(listShop.get(i).toLowerCase()+" ");

                    }
                    System.out.print("), saving " + moneySecond +" yuan");
                    System.out.println();
                }
                else{
                    System.out.println("Promotion used:");
                    System.out.println("Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan");
                }
            }

                System.out.println("-----------------------------------\n");
                System.out.println("Total：" + sum+" yuan");
                System.out.println("===================================");


        return "";
    }

    public static void main(String[] args) {
        ArrayList<Item> arrayList =new ArrayList<>();
        Item item1 = new Item("ITEM0001","Braised chicken",18);
        Item item2 = new Item("ITEM0013","Chinese hamburger",6);
        Item item3 = new Item("ITEM0022","Cold noodles",8);
        Item item4 =new Item("ITEM0030", "coca-cola", 2.00);

        arrayList.add(item1);
        arrayList.add(item2);
        arrayList.add(item3);
        arrayList.add(item4);
        ItemRepositoryImpl itemRepository = new ItemRepositoryImpl();
        itemRepository.addItem(arrayList);


        SalesPromotion salesPromotion1 = new SalesPromotion("BUY_30_SAVE_6_YUAN","Half price for certain dishes", Arrays.asList());
        SalesPromotion salesPromotion2 = new SalesPromotion("50%_DISCOUNT_ON_SPECIFIED_ITEMS","Half price for certain dishes",Arrays.asList(
                "ITEM0001", "ITEM0022"
        ));
        Arrays.asList(salesPromotion1,salesPromotion2);
        SalesPromotionRepositoryImpl salesPromotionRepository = new SalesPromotionRepositoryImpl();
        salesPromotionRepository.addSalesPromotion(Arrays.asList(salesPromotion1,salesPromotion2));
        App app = new App(itemRepository,salesPromotionRepository);
        app.bestCharge(Arrays.asList("ITEM0013 x 4", "ITEM0022 x 1"));
        app.bestCharge(Arrays.asList("ITEM0013 x 4"));
        app.bestCharge(Arrays.asList("ITEM0001 x 1", "ITEM0013 x 2", "ITEM0022 x 1"));
    }

}


